{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/morfy/Documents/nextbitcoin/nextBitcoin/components/Prices.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar Prices =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Prices, _React$Component);\n\n  function Prices() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Prices);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Prices)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      currency: 'USD'\n    });\n\n    return _this;\n  }\n\n  _createClass(Prices, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var list = '';\n\n      if (this.state.currency === 'USD') {\n        list = __jsx(\"li\", {\n          className: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        }, \"Bitcoin rate for \", this.props.bpi.USD.description, \": \", __jsx(\"span\", {\n          className: \"tag is-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, \" \", this.props.bpi.USD.code), __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, this.props.bpi.USD.rate));\n      } else if (this.state.currency === 'GBP') {\n        list = __jsx(\"li\", {\n          className: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, \"Bitcoin rate for \", this.props.bpi.GBP.description, \": \", __jsx(\"span\", {\n          className: \"tag is-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, this.props.bpi.GBP.code), __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, this.props.bpi.GBP.rate));\n      } else if (this.state.currency === 'EUR') {\n        list = __jsx(\"li\", {\n          className: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \"Bitcoin rate for \", this.props.bpi.EUR.description, \": \", __jsx(\"span\", {\n          className: \"tag is-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, this.props.bpi.EUR.code), __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, this.props.bpi.EUR.rate));\n      }\n\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, __jsx(\"ul\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, list), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), __jsx(\"select\", {\n        onChange: function onChange(e) {\n          return _this2.setState({\n            currency: e.target.value\n          });\n        },\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, __jsx(\"option\", {\n        value: \"USD\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"USD\"), __jsx(\"option\", {\n        value: \"GBP\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"GBP\"), __jsx(\"option\", {\n        value: \"EUR\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"EUR\")));\n    }\n  }]);\n\n  return Prices;\n}(React.Component);\n\nexport default Prices;","map":{"version":3,"sources":["/home/morfy/Documents/nextbitcoin/nextBitcoin/components/Prices.js"],"names":["Prices","currency","list","state","props","bpi","USD","description","code","rate","GBP","EUR","e","setState","target","value","React","Component"],"mappings":";;;;;;;;;;;IAAMA,M;;;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,QAAQ,EAAE;AADJ,K;;;;;;;6BAIC;AAAA;;AAEP,UAAIC,IAAI,GAAG,EAAX;;AAEA,UAAG,KAAKC,KAAL,CAAWF,QAAX,KAAwB,KAA3B,EAAkC;AAChCC,QAAAA,IAAI,GAAG;AAAI,UAAA,SAAS,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACW,KAAKE,KAAL,CAAWC,GAAX,CAAeC,GAAf,CAAmBC,WAD9B,QAEL;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAgC,KAAKH,KAAL,CAAWC,GAAX,CAAeC,GAAf,CAAmBE,IAAnD,CAFK,EAGP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAS,KAAKJ,KAAL,CAAWC,GAAX,CAAeC,GAAf,CAAmBG,IAA5B,CAHO,CAAP;AAKD,OAND,MAMO,IAAG,KAAKN,KAAL,CAAWF,QAAX,KAAwB,KAA3B,EAAkC;AACvCC,QAAAA,IAAI,GAAG;AAAI,UAAA,SAAS,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACW,KAAKE,KAAL,CAAWC,GAAX,CAAeK,GAAf,CAAmBH,WAD9B,QAEL;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA+B,KAAKH,KAAL,CAAWC,GAAX,CAAeK,GAAf,CAAmBF,IAAlD,CAFK,EAGP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAS,KAAKJ,KAAL,CAAWC,GAAX,CAAeK,GAAf,CAAmBD,IAA5B,CAHO,CAAP;AAKD,OANM,MAMA,IAAG,KAAKN,KAAL,CAAWF,QAAX,KAAwB,KAA3B,EAAkC;AACvCC,QAAAA,IAAI,GAAG;AAAI,UAAA,SAAS,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACW,KAAKE,KAAL,CAAWC,GAAX,CAAeM,GAAf,CAAmBJ,WAD9B,QAEL;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA+B,KAAKH,KAAL,CAAWC,GAAX,CAAeM,GAAf,CAAmBH,IAAlD,CAFK,EAGP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAS,KAAKJ,KAAL,CAAWC,GAAX,CAAeM,GAAf,CAAmBF,IAA5B,CAHO,CAAP;AAKD;;AAED,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGP,IADH,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE;AAAQ,QAAA,QAAQ,EAAE,kBAAAU,CAAC;AAAA,iBAAI,MAAI,CAACC,QAAL,CAAc;AAAEZ,YAAAA,QAAQ,EAAEW,CAAC,CAACE,MAAF,CAASC;AAArB,WAAd,CAAJ;AAAA,SAAnB;AAAoE,QAAA,SAAS,EAAC,EAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,EAEA;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFA,EAGA;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHA,CALF,CADF;AAaD;;;;EA1CkBC,KAAK,CAACC,S;;AA6C3B,eAAejB,MAAf","sourcesContent":["class Prices extends React.Component {\n  state = {\n    currency: 'USD'\n  }\n\n  render() {\n\n    let list = '';\n\n    if(this.state.currency === 'USD') {\n      list = <li className=\"\">\n      Bitcoin rate for {this.props.bpi.USD.description}\n      : <span className=\"tag is-info\"> {this.props.bpi.USD.code}</span>\n      <strong>{this.props.bpi.USD.rate}</strong>\n      </li>\n    } else if(this.state.currency === 'GBP') {\n      list = <li className=\"\">\n      Bitcoin rate for {this.props.bpi.GBP.description}\n      : <span className=\"tag is-info\">{this.props.bpi.GBP.code}</span>\n      <strong>{this.props.bpi.GBP.rate}</strong>\n      </li>\n    } else if(this.state.currency === 'EUR') {\n      list = <li className=\"\">\n      Bitcoin rate for {this.props.bpi.EUR.description}\n      : <span className=\"tag is-info\">{this.props.bpi.EUR.code}</span>\n      <strong>{this.props.bpi.EUR.rate}</strong>\n      </li>\n    }\n\n    return(\n      <div>\n        <ul className=\"\">\n          {list}\n        </ul>\n        <br/>\n        <select onChange={e => this.setState({ currency: e.target.value })} className=\"\">\n        <option value=\"USD\">USD</option>\n        <option value=\"GBP\">GBP</option>\n        <option value=\"EUR\">EUR</option>\n        </select>\n      </div>\n    )\n  }\n}\n\nexport default Prices;"]},"metadata":{},"sourceType":"module"}